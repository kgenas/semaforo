{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/Learn React/Undemy React/proyect/my-app/src/components/AppBody.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Next } from '../actions/semaforoAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppBody = () => {\n  _s();\n\n  const [buttonValues, setbuttonValues] = useState(['', '', '']);\n  const [nextCount, setnextCount] = useState(0);\n  const {\n    count,\n    valueArray\n  } = useSelector(state => state.semaforo, shallowEqual);\n  const dispatch = useDispatch();\n\n  const handleNext = e => {\n    e.preventDefault();\n    setnextCount(count + 1);\n\n    switch (nextCount) {\n      case 1:\n        return setbuttonValues(['rojo', '', '']);\n\n      case 2:\n        return setbuttonValues(['rojo', '', '']);\n\n      default:\n        return setbuttonValues(['', '', '']);\n    } // if(nextCount>=3){\n    //   setnextCount(1);\n    // }\n\n  };\n\n  useEffect(() => {\n    dispatch(Next(nextCount, valueArray));\n  }, [dispatch, nextCount, valueArray]);\n  console.log(count);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"AppBody\", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: nextCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppBody, \"4k6Av3jB93Tlfji8QSB77oLbDNM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AppBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppBody\");","map":{"version":3,"sources":["/home/pedro/Documents/Learn React/Undemy React/proyect/my-app/src/components/AppBody.js"],"names":["useEffect","useState","useDispatch","useSelector","shallowEqual","Next","AppBody","buttonValues","setbuttonValues","nextCount","setnextCount","count","valueArray","state","semaforo","dispatch","handleNext","e","preventDefault","console","log"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAkCC,YAAlC,QAAqD,aAArD;AACA,SAASC,IAAT,QAAqB,2BAArB;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAE3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAAD,CAAhD;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM;AAAEU,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAwBT,WAAW,CAAEU,KAAK,IAAIA,KAAK,CAACC,QAAjB,EAA0BV,YAA1B,CAAzC;AACA,QAAMW,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,QAAMc,UAAU,GAAIC,CAAD,IAAM;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,YAAY,CAACC,KAAK,GAAC,CAAP,CAAZ;;AAEA,YAAOF,SAAP;AACE,WAAK,CAAL;AACE,eAAOD,eAAe,CAAC,CAAC,MAAD,EAAQ,EAAR,EAAW,EAAX,CAAD,CAAtB;;AACF,WAAK,CAAL;AACE,eAAOA,eAAe,CAAC,CAAC,MAAD,EAAQ,EAAR,EAAW,EAAX,CAAD,CAAtB;;AACF;AACE,eAAOA,eAAe,CAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAAD,CAAtB;AANJ,KAJqB,CAarB;AACA;AACA;;AACH,GAhBD;;AAkBAR,EAAAA,SAAS,CAAC,MAAI;AACZe,IAAAA,QAAQ,CAACV,IAAI,CAACI,SAAD,EAAWG,UAAX,CAAL,CAAR;AACD,GAFQ,EAEP,CAACG,QAAD,EAAUN,SAAV,EAAoBG,UAApB,CAFO,CAAT;AAIAO,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,sBACE;AAAA,uCACI;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,MAAA,OAAO,EAAGO,UADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAtCM;;GAAMV,O;UAImBH,W,EACbD,W;;;KALNI,O","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector,shallowEqual} from 'react-redux';\nimport { Next } from '../actions/semaforoAction';\n\nexport const AppBody = () => {\n\n  const [buttonValues, setbuttonValues] = useState(['','','']);\n  const [nextCount, setnextCount] = useState(0);\n  const { count, valueArray } = useSelector( state => state.semaforo,shallowEqual);\n  const dispatch = useDispatch();  \n\n  const handleNext = (e) =>{\n      e.preventDefault();   \n      setnextCount(count+1);\n  \n      switch(nextCount){\n        case 1:\n          return setbuttonValues(['rojo','','']);\n        case 2:\n          return setbuttonValues(['rojo','','']); \n        default:\n          return setbuttonValues(['','','']);\n          \n      }\n      // if(nextCount>=3){\n      //   setnextCount(1);\n      // }\n  }\n\n  useEffect(()=>{\n    dispatch(Next(nextCount,valueArray));\n  },[dispatch,nextCount,valueArray])\n  \n  console.log(count);\n  return (\n    <div>AppBody\n        <h3>{nextCount}</h3>\n        <button \n            onClick={ handleNext }\n        >Next</button>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}